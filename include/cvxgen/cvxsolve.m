% Produced by CVXGEN, 2020-09-17 15:09:17 -0400.
% CVXGEN is Copyright (C) 2006-2017 Jacob Mattingley, jem@cvxgen.com.
% The code in this file is Copyright (C) 2006-2017 Jacob Mattingley.
% CVXGEN, or solvers produced by CVXGEN, cannot be used for commercial
% applications without prior written permission from Jacob Mattingley.

% Filename: cvxsolve.m.
% Description: Solution file, via cvx, for use with sample.m.
function [vars, status] = cvxsolve(params, settings)
B = params.B;
L = params.L;
P_sqrt = params.P_sqrt;
a_max = params.a_max;
dtan_max = params.dtan_max;
fx = params.fx;
k = params.k;
k_prev = params.k_prev;
lam_3 = params.lam_3;
lam_4 = params.lam_4;
q = params.q;
tan_d_max = params.tan_d_max;
z_prev = params.z_prev;
cvx_begin
  % Caution: automatically generated by cvxgen. May be incorrect.
  variable u(2, 1);
  variable y(4, 1);

  minimize(lam_3*square(u(1)) + lam_4*square(u(2)) + quad_form(P_sqrt*y, eye(4)) + q'*y);
  subject to
    y == fx + B*u;
    -a_max <= u(1);
    u(1) <= a_max;
    abs(u(2) + L*k) <= tan_d_max;
    abs(u(2) + L*k - z_prev - L*k_prev) <= dtan_max;
cvx_end
vars.u = u;
vars.y = y;
status.cvx_status = cvx_status;
% Provide a drop-in replacement for csolve.
status.optval = cvx_optval;
status.converged = strcmp(cvx_status, 'Solved');
